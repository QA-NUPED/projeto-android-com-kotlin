# name: Measure coverage

# on:
#   push:
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       pull-requests: write
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK
#         uses: actions/setup-java@v2
#         with:
#           java-version: 11
#           distribution: 'adopt'
#       - name: Grant execute permission to gradlew
#         run: chmod +x gradlew  # Concede permissões de execução
#       - name: Set up Gradle
#         uses: gradle/gradle-build-action@v2
#       - name: Generate kover coverage report
#         run: ./gradlew koverXmlReportRelease
#       - name: Add coverage report to PR
#         id: kover
#         uses: mi-kas/kover-report@v1
#         with:
#           path: ${{ github.workspace }}/app/build/reports/kover/report.xml
#           token: ${{ secrets.GITHUB_TOKEN }}
#           title: Code Coverage
#           update-comment: true
#           min-coverage-overall: 10
#           min-coverage-changed-files: 80
#           coverage-counter-type: LINE

name: SonarCloud
on:
  push:
    branches:
      - test/sonar2
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
